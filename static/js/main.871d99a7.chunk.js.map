{"version":3,"sources":["components/Navigation.js","components/FaceRecognition.js","components/SignIn.js","components/Register.js","components/ImageLinkForm.js","components/Rank.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","onRouteChange","className","FaceRecognition","id","alt","src","imageUrl","width","height","top","box","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","_this2","htmlFor","type","name","placeholder","onChange","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","onButtonSubmit","Rank","concat","entries","particlesOptions","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","assign","catch","console","log","err","_this$state","particles_default","params","components_Navigation","components_Rank","src_components_ImageLinkForm","src_components_FaceRecognition","components_SignIn","components_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.871d99a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = (props) => {\r\n\t\tif (props.isSignedIn) {\r\n\t\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => props.onRouteChange('signout')} className='f3 link dim white underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\t\r\n\t\t\t)\t\t\r\n\t\t} else {\r\n\t\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => props.onRouteChange('signin')} className='f3 link dim white underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => props.onRouteChange('register')} className='f3 link dim white underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\t\r\n\t\t\t);\t\r\n\t\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = (props) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t<img id='inputimage' alt='' src={props.imageUrl} width='500px' height='auto'/>\r\n\t\t\t<div className='bounding-box' style={{top: props.box.topRow, right: props.box.rightCol, bottom: props.box.bottomRow, left: props.box.leftCol}}>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({ signInEmail: event.target.value })\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({ signInPassword: event.target.value })\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://vast-inlet-27948.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\t\t\t\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n      .then(user => {\r\n        if(user.id){\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"white measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"center f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"white pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t\t\t\t\t\tplaceholder=\"test@gmail.com\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.onEmailChange} \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"white pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"test\"\r\n\t\t\t\t        \tonChange={this.onPasswordChange} \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input\r\n\t\t\t\t      \tonClick={this.onSubmitSignIn}\r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--white white bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Sign in\"\r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim white db pointer\">Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\t\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({ name: event.target.value })\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({ email: event.target.value })\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({ password: event.target.value })\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://vast-inlet-27948.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id){\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"white measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"center f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"text\" \r\n\t\t\t\t        name=\"name\"  \r\n\t\t\t\t        id=\"name\"\r\n\t\t\t\t        onChange={this.onNameChange} \r\n\t\t\t\t      />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"email\" \r\n\t\t\t\t        name=\"email-address\"  \r\n\t\t\t\t        id=\"email-address\" \r\n\t\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t\t      />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"password\" \r\n\t\t\t\t        name=\"password\"  \r\n\t\t\t\t        id=\"password\"\r\n\t\t\t\t        onChange={this.onPasswordChange} \r\n\t\t\t\t      />\r\n\t\t\t\t      </div>\r\n\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input\r\n\t\t\t\t      \tonClick={this.onSubmitSignIn}\r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib white\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Register\"\r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Register;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = (props) => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p className=\"white f3\">\r\n\t\t\t\t\t{'Enter URL below to detect a face'}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='center'>\r\n\t\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className=\"f4 pa2 w-70 center\" type='text' onChange={props.onInputChange}/>\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={props.onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${props.name}, your current entry count is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{props.entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation';\nimport FaceRecognition from './components/FaceRecognition';\nimport SignIn from './components/SignIn';\nimport Register from './components/Register';\n// import Logo from './components/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank';\nimport './App.css';\n\n\nconst particlesOptions = {\n  \"particles\": {\n          \"number\": {\n              \"value\": 50,\n              \"density\": {\n                  \"enable\": false\n              }\n          },\n          \"size\": {\n              \"value\": 3,\n              \"random\": true,\n              \"anim\": {\n                  \"speed\": 4,\n                  \"size_min\": 0.3\n              }\n          },\n          \"line_linked\": {\n              \"enable\": false\n          },\n          \"move\": {\n              \"random\": true,\n              \"speed\": 1,\n              \"direction\": \"top\",\n              \"out_mode\": \"out\"\n          }\n      }\n};\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState(\n      {user: \n        {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://vast-inlet-27948.herokuapp.com/imageurl', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n        })\n      })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('https://vast-inlet-27948.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n        })\n      })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n        })\n        .catch(console.log)\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }  \n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' ?\n          <div>\n            {/* <Logo /> */}\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n          : (\n              route === 'signin' ?\n                <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                :\n                <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n      );\n    }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}